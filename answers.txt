Question: Alternatively, to compare items in the cart, instead of using Comparator, we can use the Comparable interface and override the compareTo()method. You can refer to the Java docs to see the information of this interface. 
Suppose we are taking this Comparable interface approach.
-	What class should implement the Comparable interface?
Lớp Media nên triển khai giao diện Comparable vì nó là lớp cha của tất cả các loại phương tiện (DVD, CD, Book). Việc triển khai trong lớp này sẽ đảm bảo tính kế thừa, và các lớp con có thể mở rộng hoặc ghi đè phương thức compareTo() nếu cần.

-	In those classes, how should you implement the compareTo()method be to reflect the ordering that we want?
Trong phương thức compareTo() của lớp Media, ta cần triển khai logic so sánh theo thứ tự ưu tiên. Ví dụ:
Nếu so sánh theo title, sau đó đến cost, phương thức sẽ như sau:
@Override
public int compareTo(Media other) {
    int titleComparison = this.title.compareTo(other.title); // So sánh tiêu đề
    if (titleComparison != 0) {
        return titleComparison; // Trả về kết quả nếu tiêu đề khác nhau
    }
    return Float.compare(other.cost, this.cost); // So sánh chi phí nếu tiêu đề giống nhau
}

-	Can we have two ordering rules of the item (by title then cost and by cost then title) if we use this Comparable interface approach?
Không, nếu sử dụng giao diện Comparable, một lớp chỉ có thể có một quy tắc sắp xếp mặc định thông qua phương thức compareTo().
Nếu cần nhiều quy tắc sắp xếp khác nhau, cần sử dụng Comparator thay vì Comparable. Với Comparator, bạn có thể tạo nhiều bộ so sánh (comparators) độc lập để phục vụ các mục đích khác nhau.

-	Suppose the DVDs has a different ordering rule from the other media types, that is by title, then decreasing length, then cost. How would you modify your code to allow this?
Có thể ghi đè phương thức compareTo() trong lớp con DVD để triển khai quy tắc riêng cho loại DVD:
public class DVD extends Media {
    private int length;

    @Override
    public int compareTo(Media other) {
        if (other instanceof DVD) { // Kiểm tra nếu other là DVD
            DVD otherDVD = (DVD) other;
            int titleComparison = this.getTitle().compareTo(otherDVD.getTitle());
            if (titleComparison != 0) {
                return titleComparison; // So sánh theo tiêu đề
            }
            int lengthComparison = Integer.compare(otherDVD.length, this.length); // So sánh giảm dần theo độ dài
            if (lengthComparison != 0) {
                return lengthComparison;
            }
            return Float.compare(this.getCost(), otherDVD.getCost()); // So sánh theo giá nếu các yếu tố trước giống nhau
        }
        return super.compareTo(other); // Mặc định gọi phương thức của lớp cha nếu không phải DVD
    }
}
Trong trường hợp này, quy tắc mặc định của Media sẽ được sử dụng cho các lớp khác (CD, Book), và lớp DVD sẽ có quy tắc sắp xếp riêng.